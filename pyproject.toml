[project]
name = "modelz-py"
dynamic = ["version"]
description = "machine learning models"
authors = [
    {name = "TensorChord", email = "modelz-support@tensorchord.ai"},
]
keywords = ["machine learning", "deep learning"]
classifiers = [
    "Environment :: GPU",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "httpx>=0.23.3",
    "msgpack>=1.0.4",
    "typer[all]>=0.7.0",
    "rich>=12.6.0",
    "gradio-client>=0.2.0",
    "click>=8.0.4",
    "attrs>=21.3.0",
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "Apache-2.0"}

[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"

[project.scripts]
modelz = "modelz.args:main"

[tool.pdm]
[tool.pdm.version]
source = "scm"
write_to = "modelz/__version__.py"
write_template = "__version__ = '{}'"
[tool.pdm.scripts]
black = "black --check modelz"
ruff = "ruff check ."
lint = {composite = ["black", "ruff"]}
doc = "make docs"
generate = "make generate"
[tool.pdm.dev-dependencies]
lint = [
    "ruff>=0.0.252",
    "black>=23.1.0",
]
test = [
    "pytest>=7.2.1",
]
doc = [
    "sphinx>=5.3.0",
    "shibuya>=2023.3.19",
    "sphinx-design>=0.4.1",
    "sphinx-copybutton>=0.5.2",
    "sphinx_click>=5.0.0",
]
generate = [
    "jsonpath_ng>=1.6.0",
    "openapi-python-client>=0.15.2"
]
[tool.pdm.build]
includes = ["modelz/"]
excludes = ["docs/", "hack/", "modelz/openapi/swagger*","tests/"]

[tool.ruff]
line-length = 88
select = ["E", "F", "B", "I", "SIM", "TID", "PL"]
[tool.ruff.pylint]
max-args = 7
